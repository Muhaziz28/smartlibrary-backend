package ip.addr.actualizationulfiaizzati.monitor.ibuhamil

import android.content.Intent
import android.net.Uri
import android.os.Bundle
import android.view.*
import android.widget.*
import androidx.appcompat.widget.AppCompatSpinner
import androidx.appcompat.widget.LinearLayoutCompat
import androidx.fragment.app.Fragment
import androidx.fragment.app.viewModels
import androidx.lifecycle.Observer
import androidx.navigation.fragment.navArgs
import androidx.navigation.fragment.findNavController
import ip.addr.actualizationulfiaizzati.R
import ip.addr.actualizationulfiaizzati.databinding.ReportIbuHamilFragBinding
import ip.addr.actualizationulfiaizzati.util.*
import java.util.*

class ReportIbuHamilFrag:Fragment() {
    private val viewModel by viewModels<IbuHamilViewModel> { getViewModelFactory() }

    private lateinit var viewDataBinding: ReportIbuHamilFragBinding
    private val args: ReportIbuHamilFragArgs by navArgs()

    private lateinit var pernahperiksakehamilantrue: RadioButton
    private lateinit var pernahperiksakehamilanfalse: RadioButton

    private lateinit var ibukonsumsimakananbergizitrue: RadioButton
    private lateinit var ibukonsumsimakananbergizifalse: RadioButton

    private lateinit var ibuperiksadarahlabortrue: RadioButton
    private lateinit var ibuperiksadarahlaborfalse: RadioButton

    private lateinit var ibuperiksahivtrue: RadioButton
    private lateinit var ibuperiksahivfalse: RadioButton

    private lateinit var ibuperiksasifilistrue: RadioButton
    private lateinit var ibuperiksasifilisfalse: RadioButton

    private lateinit var ibuperiksahbsagtrue: RadioButton
    private lateinit var ibuperiksahbsagfalse: RadioButton

    private lateinit var konsumsitabeltambahdarahasamfolattrue: RadioButton
    private lateinit var konsumsitabeltambahdarahasamfolatfalse: RadioButton

    private lateinit var terpapakrokoktrue: RadioButton
    private lateinit var terpapakrokokfalse: RadioButton

    private lateinit var kelasibuhamiltrue: RadioButton
    private lateinit var kelasibuhamilfalse: RadioButton

    private lateinit var jknbpjstrue: RadioButton
    private lateinit var jknbpjsfalse: RadioButton

    override fun onCreateView(inflater: LayoutInflater, container: ViewGroup?, savedInstanceState: Bundle?): View? {
        viewDataBinding = ReportIbuHamilFragBinding.inflate(inflater, container, false).apply {
            this.viewmodel = viewModel
        }

        viewDataBinding.root.findViewById<AppCompatSpinner>(R.id.hubungandenganibuhamil).setOnTouchListener{ view, motionEvent ->
            true
        }

        pernahperiksakehamilantrue = viewDataBinding.root.findViewById(R.id.pernahperiksakehamilantrue)
        pernahperiksakehamilanfalse = viewDataBinding.root.findViewById(R.id.pernahperiksakehamilanfalse)

        ibukonsumsimakananbergizitrue = viewDataBinding.root.findViewById(R.id.ibukonsumsimakananbergizitrue)
        ibukonsumsimakananbergizifalse = viewDataBinding.root.findViewById(R.id.ibukonsumsimakananbergizifalse)

        ibuperiksadarahlabortrue = viewDataBinding.root.findViewById(R.id.ibuperiksadarahlabortrue)
        ibuperiksadarahlaborfalse = viewDataBinding.root.findViewById(R.id.ibuperiksadarahlaborfalse)

        ibuperiksahivtrue = viewDataBinding.root.findViewById(R.id.ibuperiksahivtrue)
        ibuperiksahivfalse = viewDataBinding.root.findViewById(R.id.ibuperiksahivfalse)

        ibuperiksasifilistrue = viewDataBinding.root.findViewById(R.id.ibuperiksasifilistrue)
        ibuperiksasifilisfalse = viewDataBinding.root.findViewById(R.id.ibuperiksasifilisfalse)

        ibuperiksahbsagtrue = viewDataBinding.root.findViewById(R.id.ibuperiksahbsagtrue)
        ibuperiksahbsagfalse = viewDataBinding.root.findViewById(R.id.ibuperiksahbsagfalse)

        konsumsitabeltambahdarahasamfolattrue = viewDataBinding.root.findViewById(R.id.konsumsitabeltambahdarahasamfolattrue)
        konsumsitabeltambahdarahasamfolatfalse = viewDataBinding.root.findViewById(R.id.konsumsitabeltambahdarahasamfolatfalse)

        terpapakrokoktrue = viewDataBinding.root.findViewById(R.id.terpapakrokoktrue)
        terpapakrokokfalse = viewDataBinding.root.findViewById(R.id.terpapakrokokfalse)

        kelasibuhamiltrue = viewDataBinding.root.findViewById(R.id.kelasibuhamiltrue)
        kelasibuhamilfalse = viewDataBinding.root.findViewById(R.id.kelasibuhamilfalse)

        jknbpjstrue = viewDataBinding.root.findViewById(R.id.jknbpjstrue)
        jknbpjsfalse = viewDataBinding.root.findViewById(R.id.jknbpjsfalse)

        setHasOptionsMenu(true)
        return viewDataBinding.root
    }

    override fun onActivityCreated(savedInstanceState: Bundle?) {
        super.onActivityCreated(savedInstanceState)
        setupNavigation()

        viewModel.getIbuHamilWithId(args.ibuHamilId)
    }

    private fun setupNavigation() {

        viewModel.ibuHamil.observe(this, Observer {
            viewModel.namaibuhamil.set(it.namaibuhamil)
            viewModel.kelurahanibuhamil.set(it.kelurahan)
            viewModel.hubungandenganibuhamil.set(it.hubungandenganibuhamil)
            viewModel.tanggallahiribu.set(it.tanggallahiribu)
            viewModel.umurIbu.set(it.tanggallahiribu?.let { date -> convertDate(date) })
            viewModel.usiakehamilan.set(it.usiakehamilan?.let { usia -> usia.toString() })
            viewModel.bbsebelumhamil.set(it.bbsebelumhamil?.let { bb -> bb.toString() })
            viewModel.bbsekarang.set(it.bbsekarang?.let { bb -> bb.toString() })

            if (it.pernahperiksakehamilan != null){
                if (it.pernahperiksakehamilan!!) {
                    pernahperiksakehamilantrue.isChecked = true
                    pernahperiksakehamilanfalse.isChecked = false
                } else {
                    pernahperiksakehamilantrue.isChecked = false
                    pernahperiksakehamilanfalse.isChecked = true
                }
            }

            if (it.ibukonsumsimakananbergizi != null){
                if (it.ibukonsumsimakananbergizi!!) {
                    ibukonsumsimakananbergizitrue.isChecked = true
                    ibukonsumsimakananbergizifalse.isChecked = false
                } else {
                    ibukonsumsimakananbergizitrue.isChecked = false
                    ibukonsumsimakananbergizifalse.isChecked = true
                }
            }

            if (it.ibuperiksadarahlabor != null){
                if (it.ibuperiksadarahlabor!!) {
                    ibuperiksadarahlabortrue.isChecked = true
                    ibuperiksadarahlaborfalse.isChecked = false
                } else {
                    ibuperiksadarahlabortrue.isChecked = false
                    ibuperiksadarahlaborfalse.isChecked = true
                }
            }

            if (it.hivibu != null){
                if (it.hivibu!!) {
                    ibuperiksahivtrue.isChecked = true
                    ibuperiksahivfalse.isChecked = false
                } else {
                    ibuperiksahivtrue.isChecked = false
                    ibuperiksahivfalse.isChecked = true
                }
            }

            if (it.sifilisibu != null){
                if (it.sifilisibu!!) {
                    ibuperiksasifilistrue.isChecked = true
                    ibuperiksasifilisfalse.isChecked = false
                } else {
                    ibuperiksasifilistrue.isChecked = false
                    ibuperiksasifilisfalse.isChecked = true
                }
            }

            if (it.hbsagibu != null){
                if (it.hbsagibu!!) {
                    ibuperiksahbsagtrue.isChecked = true
                    ibuperiksahbsagfalse.isChecked = false
                } else {
                    ibuperiksahbsagtrue.isChecked = false
                    ibuperiksahbsagfalse.isChecked = true
                }
            }

            if (it.konsumsitabeltambahdarahasamfolat != null){
                if (it.konsumsitabeltambahdarahasamfolat!!) {
                    konsumsitabeltambahdarahasamfolattrue.isChecked = true
                    konsumsitabeltambahdarahasamfolatfalse.isChecked = false
                } else {
                    konsumsitabeltambahdarahasamfolattrue.isChecked = false
                    konsumsitabeltambahdarahasamfolatfalse.isChecked = true
                }
            }

            if (it.terpapakrokok != null){
                if (it.terpapakrokok!!) {
                    terpapakrokoktrue.isChecked = true
                    terpapakrokokfalse.isChecked = false
                } else {
                    terpapakrokoktrue.isChecked = false
                    terpapakrokokfalse.isChecked = true
                }
            }

            if (it.kelasibuhamil != null){
                if (it.kelasibuhamil!!) {
                    kelasibuhamiltrue.isChecked = true
                    kelasibuhamilfalse.isChecked = false
                } else {
                    kelasibuhamiltrue.isChecked = false
                    kelasibuhamilfalse.isChecked = true
                }
            }

            if (it.jknbpjs != null){
                if (it.jknbpjs!!) {
                    jknbpjstrue.isChecked = true
                    jknbpjsfalse.isChecked = false
                } else {
                    jknbpjstrue.isChecked = false
                    jknbpjsfalse.isChecked = true
                }
            }

        })

        viewModel.awasRecommendation.observe(this, Observer {
            viewModel.reportTitle.set(getString(R.string.title_awas))
            viewModel.reportRecommendationFirst.set(getString(R.string.msg_awas_waspada_first))
            viewModel.reportRecommendationSecond.set(getString(R.string.msg_awas_waspada_second))
            viewModel.reportRecommendationThree.set(getString(R.string.msg_awas_waspada_three))
        })

        viewModel.waspadaRecommendation.observe(this, Observer {
            viewModel.reportTitle.set(getString(R.string.title_waspada))
            viewModel.reportRecommendationFirst.set(getString(R.string.msg_awas_waspada_first))
            viewModel.reportRecommendationSecond.set(getString(R.string.msg_awas_waspada_second))
            viewModel.reportRecommendationThree.set(getString(R.string.msg_awas_waspada_three))
        })

        viewModel.okRecommendation.observe(this, Observer {
            viewModel.reportTitle.set(getString(R.string.title_baik))
            viewModel.reportRecommendationFirst.set(getString(R.string.msg_baik_first))
            viewModel.reportRecommendationSecond.set(getString(R.string.msg_baik_second))
            viewModel.reportRecommendationThree.set(getString(R.string.msg_baik_three))
        })

        viewModel.registerToHealth.observe(this, Observer {
            if(PreferenceUtils.isDataWithKey(this@ReportIbuHamilFrag.activity!!, Constant.USER_KEY)){
                val key = PreferenceUtils.getDataWithKey(this@ReportIbuHamilFrag.activity!!, Constant.USER_KEY)
                viewModel.loadUser(true, key!!)
            }
        })

        viewModel.userReg.observe(this, Observer {
            if(it != null){
                if (WhatsappUtils.isFaskesAndalas(it)){
                    val msg = getString(R.string.daftar_puskesmas_andalas)
                    val url = "https://wa.me/6285212882042/?text="+msg
                    val intent = Intent(Intent.ACTION_VIEW)
                    intent.data = Uri.parse(url)
                    startActivity(intent)
                }
                else {
                    Toast.makeText(this@ReportIbuHamilFrag.activity, "Fitur belum tersedia.", Toast.LENGTH_SHORT).show()
                }
            }
        })
    }

    private fun convertDate (dateString: String) : String{
        val date = DateUtil.stringUIDateToDate(dateString)
        val cal = Calendar.getInstance()
        cal.time = date
        val currCal = Calendar.getInstance()
        currCal.time = Date()
        val age = DateUtil.calculateAge(cal, currCal)
        var textOutUmur = age?.years.toString() + " tahun " + age?.months.toString() + " bulan " + age?.days.toString() + " hari."
        return textOutUmur
    }

    private fun navigateToEditIbuHamil(ibuHamilId: String) {
        val action = ReportIbuHamilFragDirections
            .actionReportIbuHamilFragmentToEditIbuHamilFrag(
                ibuHamilId
            )
        findNavController().navigate(action)
    }

    override fun onOptionsItemSelected(item: MenuItem): Boolean {
        return when (item.itemId) {
            R.id.menu_edit_ibu_hamil_graph -> {
                navigateToEditIbuHamil(args.ibuHamilId)
                true
            }
            else -> false
        }
    }

    override fun onCreateOptionsMenu(menu: Menu, inflater: MenuInflater) {
        inflater.inflate(R.menu.ibu_hamil_graph, menu)
    }
}